selenium-server在selenium1中只是一个单独的服务器，而在selenium2中selenium-server的独立包中包含了所以测试所必须的程序。
这个包的名字叫做“selenium-server-standalone-X.XX.XXX.jar”，以下是该包的使用说明。

selenium-server的启动方式：
==
独立启动【交互、非交互】、作为hub启动、作为node启动【针对于hub】

启动独立RC服务器
==
java -jar selenium-server-standalone.jar
参数说明：
无：
不带参数时会使用默认参数和端口，默认接收请求和调用的地址为：http://localhost:4444/wd/hub；
此时作为独立的远程RC接收发送过来的命令（即selenese协议，基于http的一种协议）并在本地执行。当然发送命令的脚本可以是本机也可以是其他机器。
同样此时可以通过浏览器访问http://localhost:4444/wd/hub，可以看到实时的客户端注册信息。

我们通过如下代码来与RC通信
	DesiredCapabilities ieDesiredcap = DesiredCapabilities.internetExplorer();
	wd=new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), ieDesiredcap);
	wd.get("http://www.google.com");
	Thread.sleep(1200);
	System.out.println(">>>>>>>>" + wd.getCurrentUrl());
	wd.quit();

启动独立交互式RC服务器
==
java -jar selenium-server-standalone.jar -interactive
参数说明：
-interactive：
指定启动的方式为交互式，即可以在命令行直接输入selenese命令来控制在RC上注册的浏览器；
而第一种非交互的情况下，只能通过编程来与RC进行通信和发送命令来完成测试，所以此模式更像调试模式。

除了上面2种启动方式来，selenium还提供了其它的可选参数来指定独立启动时的配置信息；比如
-port xxxx
设置RC启动时监听的端口

-timeout xxxx
设置RC启动后保持客户端连接的超时时间，单位秒

-browserTimeout xxxx
设置RC启动后浏览无响应的超时时间，单位秒

此外还有许多其它的可选参数可以指定，具体可以参见命令行帮助；
java -jar selenium-server.jar -h







