#:page_title
"selenium Grid介绍"

#:previous_link
"06_test_design_considerations"

#:previous_title
"测试设计考虑"

#:next_link
"08_user_extensions"

#:next_title
"用户扩展"

#:side
:list
<li><a class="reference internal" href="#">Selenium-Grid</a><ul class="treeview">
<li><a class="reference internal" href="#quick-start">快速入门</a></li>
<li><a class="reference internal" href="#what-is-selenium-grid">什么是Selenium-Grid?</a></li>
<li><a class="reference internal" href="#when-to-use-it">何时应用</a></li>
<li><a class="reference internal" href="#selenium-grid-2-0">Selenium-Grid 2.0</a></li>
<li><a class="reference internal" href="#selenium-grid-1-0">Selenium-Grid 1.0</a></li>
<li><a class="reference internal" href="#how-selenium-grid-works-with-a-hub-and-nodes">Selenium-Grid如何与Hub和Nodes工作的</a></li>
<li><a class="reference internal" href="#installation">安装</a></li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#starting-selenium-grid">启动Selenium-Grid</a><ul class="treeview" style="display: none;">
<li><a class="reference internal" href="#starting-a-hub">启动Hub</a></li>
<li class="last"><a class="reference internal" href="#starting-a-node">启动Node</a></li>
</ul>
</li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#configuring-selenium-grid">配置Selenium-Grid</a><ul class="treeview" style="display: none;">
<li><a class="reference internal" href="#default-configuration">默认配置</a></li>
<li><a class="reference internal" href="#json-configuration-file">JSON配置文件</a></li>
<li class="last"><a class="reference internal" href="#configuring-via-the-command-line-options">通过命令行选项配置</a></li>
</ul>
</li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#hub-configuration">Hub配置</a><ul class="treeview" style="display: none;">
<li class="last"><a class="reference internal" href="#specifying-the-port">指定hub端口</a></li>
</ul>
</li>
<li><a class="reference internal" href="#node-configuration">Node配置</a></li>
<li><a class="reference internal" href="#timing-parameters">时序参数</a></li>
<li><a class="reference internal" href="#getting-command-line-help">获取命令行帮助</a></li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#common-errors">常见错误</a><ul class="treeview" style="display: none;">
<li class="last"><a class="reference internal" href="#unable-to-acess-the-jarfile">无法访问jar文件</a></li>
</ul>
</li>
<li class="last"><a class="reference internal" href="#troubleshooting">故障排除</a></li>

#:body
:body
<h1>Selenium-Grid<a class="headerlink" href="#selenium-grid" title="Permalink to this headline">¶</a></h1>
<p id="chapter07-reference"><em>注:  目前我们正在持续更新该文档，在此我们将给人们介绍一种全新的Selenium-Grid。
在接下来的几个月里我们将提供可用的样例和插图详细解释如何使用Selenium-Grid。</em></p>
<div class="section" id="quick-start">
<h2>快速入门<a class="headerlink" href="#quick-start" title="Permalink to this headline">¶</a></h2>
<p>如果你已经有使用Selenium做自动化测试的敬仰，那么你可能仅仅需要一个‘快速入门’就可以开始搭建并运行Selenium-Grid了。
本章有许多信息是面向各种技能等级的，但可能是太多；所以如果你要找的只是一个快速参考并快速尝试事情，请参考Selenium-Grid中的这篇文章<a class="reference external" href="http://code.google.com/p/selenium/wiki/Grid2">Selenium Grid2 Wiki</a>.</p>
</div>
<div class="section" id="what-is-selenium-grid">
<h2>什么是Selenium-Grid?<a class="headerlink" href="#what-is-selenium-grid" title="Permalink to this headline">¶</a></h2>
<p>Selenium-Grid允许你在不同机器不同浏览器上同时运行你的测试用例。也就是说，同一时间在不同的机器上运行的不同浏览器和操作系统上运行多个测试。
尤其是Selenium-Grid支持分布式测试执行。它允许你在<em>分布测试执行环境</em>中执行测试。</p>
</div>
<div class="section" id="when-to-use-it">
<h2>什么时候用它<a class="headerlink" href="#when-to-use-it" title="Permalink to this headline">¶</a></h2>
<p>通常来说，有两种原因，你可能想使用Selenium-Grid.</p>
<ul class="simple">
<li>在不同操作系统上的不同的浏览器的多个版本上运行测试。</li>
<li>节省执行一个完整测试套件的时间。</li>
</ul>
<p>Selenium-Grid通过在多个机器上并行运行测试来加速一个测试版本的执行速度。
比如：你的一个测试版本有100个用例，但是你搭建的Selenium-Grid支持在4台不同的机器（VM或者单独的物理机）去执行这些用例，
那么你完成一个测试版本的时间将是你在一台机器上运行的1/4。
对于大型的测试套件和长时间运行的测试套件，如执行大量的数据验证，这个将能显著节约时间。有些测试套件需要花几小时运行，
提升运行测试套件效率的另一个原因是缩短开发在checkin测试程序的代码后到获取测试结果之间的周转时间 。  
越来越多实践敏捷开发的团队都想尽可能快的获取测试反馈，而不是等了一个通宵后得到一个隔夜的结果。
</p>
<p>Selenium-Grid同样支持在多个运行环境中执行测试，具体而言就是同时运行多个浏览器。 比如： 
在虚拟机的‘grid’中分别搭建了测试需要支持的不同浏览器，  机器1是Internet Explorer 8，机器2是Internet Explorer 9，机器3是最新版的Chrome，
机器4是最新版的Firefox。 当测试套件运行时， Selenium-Grid注册每个测试浏览器的组合并分配每个测试到它要运行的测试浏览器上。</p>
<p>此外，可以有一个所有都是相同的浏览器类型和版本的‘grid’，比如：可以有一个包含4台机器并且每台都运行3个FF 12实例的‘grid’，
允许一个有效FF实例的‘server-farm’(某种意义上)。  当测试套件运行时每个测试都传递给Selenium-Grid，
然后在分配给下一个有效的 Firefox实例。 这种方式下一个测试套件在12个FF实例下并发执行，显著减少了测试一个套件所需的时间。</p>
<p>Selenium-Grid非常的灵活，这2个例子可以结合起来使用，配置每个浏览器版本都有多个实例 ，这样的配置可以同时支持并发执行和兼容性测试。</p>
</div>
<div class="section" id="selenium-grid-2-0">
<h2>Selenium-Grid 2.0<a class="headerlink" href="#selenium-grid-2-0" title="Permalink to this headline">¶</a></h2>
<p>Selenium-Grid 2.0是编写本文档时的最新发布版本(5/26/2012)。  它完全不同于Selenium-Grid1。  在Selenium-Grid2中合并了Selenium-RC服务器。
现在你仅需要下载一个 .jar文件就可以同时拥有远程的Selenium-RC-Server和Selenium-Grid。</p>
</div>
<div class="section" id="selenium-grid-1-0">
<h2>Selenium-Grid 1.0<a class="headerlink" href="#selenium-grid-1-0" title="Permalink to this headline">¶</a></h2>
<p>版本1是第一代的Selenium-Grid。如果是刚接触Selenium-Grid那么你应该使用版本2。
版本1已经升级并且包含了新的功能，支持Selenium-WebDriver， 然而遗留的测试系统可能仍然需要版本 1。 关于Selenium-Grid版本1的信息在这里找到
<a class="reference external" href="http://selenium-grid.seleniumhq.org/">Selenium-Grid站点</a>.</p>
</div>
<div class="section" id="how-selenium-grid-works-with-a-hub-and-nodes">
<h2>Selenium-Grid是如何与一个Hub和若干node工作的<a class="headerlink" href="#how-selenium-grid-works-with-a-hub-and-nodes" title="Permalink to this headline">¶</a></h2>
<p>一个‘grid’包括一个独立的hub和一到多个node。  它们都是通过selenium-server.jar启动的。 在这章的下面章节中我们列出了一些例子。</p>
<p>hub会接收一个带有浏览器和平台 (i.e. WINDOWS, LINUX, 等)信息的测试执行消息，这些信息指定了测试将要允许的环境。
hub‘知道’每个node的配置信息[因为之前node已经‘注册’过了]。 使用这些信息它就能选择出一个有效的符合浏览器和平台组合的node。
一旦node被选定，发送给hub的命令都将被初始化，这些命令都会转发给node并执行。node会运行浏览器并执行Selenium命令。
在这个浏览器中对应用程序进行测试。</p>
<p>用一个<a class="reference external" href="http://selenium-grid.seleniumhq.org/how_it_works.html">图表</a>可以更好的解释这个。
跳转到该页的第二张图 (第一张是Selenium-RC图解)。 第二张图用于说明Selenium-Grid 1，然而同样可以应用 并且是我们在这里所说内容的最好图解。
唯一不同的就是术语。替换‘Selenium Remote Control’为‘Selenium-Grid node’后该图就可以说明我们所描述的Selenium-Grid 2了。</p>
</div>
<div class="section" id="installation">
<h2>安装<a class="headerlink" href="#installation" title="Permalink to this headline">¶</a></h2>
<p>安装很简单，从<a class="reference external" href="http://seleniumhq.org/download/">SeleniumHq站点的下载页面
download page</a>下载 Selenium-Server jar文件。你可以在“Selenium-Server (formerly Selenium-RC)”片段下找到链接。</p>
<p>可以把它安装在任意你想存放的位置。你需要确保java可以在你的执行路径可以被运行，这个就可以从命令行来运行它。
如果它不能正确运行，验证你的系统环境变量中是否包含了java.exe。</p>
</div>
<div class="section" id="starting-selenium-grid">
<h2>启动Selenium-Grid<a class="headerlink" href="#starting-selenium-grid" title="Permalink to this headline">¶</a></h2>
<p>通常你应该先启动一个hub，因为node都基于它。然而这不是绝对必须的，因为node也会自动识别hub的启动，反之亦然。出于教学目的，
 先启动一个hub将会更易理解，否则第一次使用Selenium-Grid就出现错误信息可能是你不想遇到的。</p>
<div class="section" id="starting-a-hub">
<h3>启动一个Hub<a class="headerlink" href="#starting-a-hub" title="Permalink to this headline">¶</a></h3>
<p>使用默认参数启动hub，在命令行执行下面的命令。此命令可以在所有支持平台上执行 ，包括Windows、Linux或MacOs。</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-x.xx.x.jar -role hub
</pre></div>
</div>
<p>这个命令将以默认参数启动一个hub，在下面的子章节里我们将解释这些参数。注意在使用时替换掉其中的版本号部分为你下载到本地的jar文件的实际版本号。</p>
</div>
<div class="section" id="starting-a-node">
<h3>启动一个Node<a class="headerlink" href="#starting-a-node" title="Permalink to this headline">¶</a></h3>
<p>使用默认参数启动node，在命令行执行下面命令。</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-X.XX.X.jar -role node  -hub http://localhost:4444/grid/register
</pre></div>
</div>
<p>这里假设上面启动的hub使用了默认参数，即 hub默认的监听端口是4444，这就是为什么在定位hub的url中使用4444端口。
 此外，这里假设是在同一台机器上启动的node，所以使用‘localhost’，对于入门学习这样会更容易上手。
而如果hub和node分别在不同的机器上启动，只要把‘localhost’替换成运行了hub机器的host或IP即可。</p>
<p>警告:  要确认已经关闭了hub和node机器上防火墙程序，否则你可能会得到连接错误信息。</p>
</div>
</div>
<div class="section" id="configuring-selenium-grid">
<h2>配置Selenium-Grid<a class="headerlink" href="#configuring-selenium-grid" title="Permalink to this headline">¶</a></h2>
<div class="section" id="default-configuration">
<h3>默认配置<a class="headerlink" href="#default-configuration" title="Permalink to this headline">¶</a></h3>
</div>
<div class="section" id="json-configuration-file">
<h3>JSON配置文件<a class="headerlink" href="#json-configuration-file" title="Permalink to this headline">¶</a></h3>
hub配置：
<pre>
{<br/>
  "host": null,<br/>
  "port": 4444,<br/>
  "newSessionWaitTimeout": -1,<br/>
  "servlets" : [],<br/>
  "prioritizer": null,<br/>
  "capabilityMatcher": "org.openqa.grid.internal.utils.DefaultCapabilityMatcher",<br/>
  "throwOnCapabilityNotPresent": true,<br/>
  "nodePolling": 5000,<br/>
<br/>
  "cleanUpCycle": 5000,<br/>
  "timeout": 300000,<br/>
  "browserTimeout": 0,<br/>
  "maxSession": 5<br/>
}<br/>
</pre>
node配置：
<pre>
{<br/>
  "capabilities":<br/>
      [<br/>
        {<br/>
          "browserName": "*firefox",<br/>
          "maxInstances": 5,<br/>
          "seleniumProtocol": "Selenium"<br/>
        },<br/>
        {<br/>
          "browserName": "*googlechrome",<br/>
          "maxInstances": 5,<br/>
          "seleniumProtocol": "Selenium"<br/>
        },<br/>
        {<br/>
          "browserName": "*iexplore",<br/>
          "maxInstances": 1,<br/>
          "seleniumProtocol": "Selenium"<br/>
        },<br/>
        {<br/>
          "browserName": "firefox",<br/>
          "maxInstances": 5,<br/>
          "seleniumProtocol": "WebDriver"<br/>
        },<br/>
        {<br/>
          "browserName": "chrome",<br/>
          "maxInstances": 5,<br/>
          "seleniumProtocol": "WebDriver"<br/>
        },<br/>
        {<br/>
          "browserName": "internet explorer",<br/>
          "maxInstances": 1,<br/>
          "seleniumProtocol": "WebDriver"<br/>
        }<br/>
      ],<br/>
  "configuration":<br/>
  {<br/>
    "proxy": "org.openqa.grid.selenium.proxy.DefaultRemoteProxy",<br/>
    "maxSession": 5,<br/>
    "port": 5555,<br/>
    "host": ip,<br/>
    "register": true,<br/>
    "registerCycle": 5000,<br/>
    "hubPort": 4444,<br/>
    "hubHost": ip<br/>
  }<br/>
}<br/>
</pre>
</div>
<div class="section" id="configuring-via-the-command-line-options">
<h3>通过命令行选项配置参数<a class="headerlink" href="#configuring-via-the-command-line-options" title="Permalink to this headline">¶</a></h3>
</div>
</div>
<div class="section" id="hub-configuration">
<h2>Hub配置<a class="headerlink" href="#hub-configuration" title="Permalink to this headline">¶</a></h2>
<p>使用简单-role hub参数启动hub服务器</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-x.xx.x.jar -hub
</pre></div>
</div>
<p>你将看到以下的日志输出。</p>
<div class="highlight-bash"><div class="highlight"><pre>
Jul 19, 2012 10:46:21 AM org.openqa.grid.selenium.GridLauncher main<br/>
INFO: Launching a selenium grid server<br/>
2012-07-19 10:46:25.082:INFO:osjs.Server:jetty-7.x.y-SNAPSHOT<br/>
2012-07-19 10:46:25.151:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContextHandler<span class="o">{</span>/,null<span class="o">}</span><br/>
2012-07-19 10:46:25.185:INFO:osjs.AbstractConnector:Started SocketConnector@0.0.0.0:4444
</pre></div>
</div>
<div class="section" id="specifying-the-port">
<h3>指定监听端口<a class="headerlink" href="#specifying-the-port" title="Permalink to this headline">¶</a></h3>
<p>hub使用的默认监听端口是4444。这个是TCP/IP监听端口，用于‘客户端’也就是测试程序在Selenium-Grid中连接hub。
如果你机器上的其它程序已经使用了该端口，或者如果你已经在默认设置下启动了一个Selenium-Server，
你将会看到下面的日志输出。</p>
<div class="highlight-bash"><div class="highlight"><pre>10:56:35.490 WARN - Failed to start: SocketListener0@0.0.0.0:4444<br/>
Exception in thread <span class="s2">"main"</span> java.net.BindException: Selenium is already running on port 4444. Or some other service is.
</pre></div>
</div>
<p>如果是这样，你可以关闭那个使用了4444端口的程序，或者指定Selenium-Grid的hub使用一个不同的端口。
使用-port选项可以设定hub启动时监听的端口。</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-x.xx.x.jar -role hub -port 4441
</pre></div>
</div>
<p>即使本机上已经启动了另一个hub，这个命令也可以生效，只要它们不是都用4441端口。</p>
<p>或许你可能想知道哪些程序使用了4444端口，因为你想让hub在默认配置下启动。
查看本机所有程序使用的端口情况，可以使用下面的命令：</p>
<div class="highlight-bash"><div class="highlight"><pre>netstat -a
</pre></div>
</div>
<p>这个命令在所有系统上都可用， Unix/Linux， MacOs，尽管Windows可能需要添加额外的 -a参数。
你可能只想得到进程ID和端口号，在Unix下你可以使用‘grep’(使用管道)来过滤出想查找的内容。。</p>
</div>
</div>
<div class="section" id="node-configuration">
<h2>Node配置<a class="headerlink" href="#node-configuration" title="Permalink to this headline">¶</a></h2>
</div>
<div class="section" id="timing-parameters">
<h2>时序参数<a class="headerlink" href="#timing-parameters" title="Permalink to this headline">¶</a></h2>
</div>
<div class="section" id="getting-command-line-help">
<h2>获取命令行帮助<a class="headerlink" href="#getting-command-line-help" title="Permalink to this headline">¶</a></h2>
<p>Selenium-Server提供了其支持的选项及使用说明的列表。这将有助于你如何去查找并理解这些支持的选项。</p>
<p>Selenium-Server提供了2个独立的功能，那就是Selenium-RC服务器和Selenium-Grid。
这些功能可能由不同Selenium团队开发的，因此每个功能的命令行帮助是在不同地方结束。 对于新用户， 对于新用户，当你第一次在查看这2个功能时可能并不明显。
</p>
<p>
如果你只是传递-h参数给程序，那么你得到的选项只是Selenium-RC服务器的，而不包括Selenium-Grid的选项。
</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-2.21.0.jar -h
</pre></div>
</div>
<p>这个将显示Selenium-RC服务器的选项。如果你想获取Selenium-Grid的命令行帮助，
那么你首先要加上 -hub 或 -node 选项来告诉Selenium-Server你想要获取Selenium-Grid信息然后在附加-h选项。
[在最新版的selenium-server中默认就会同时显示2个功能的全部帮助]</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-X.XX.X.jar -role node -h
</pre></div>
</div>
<p>或者像下面这样，在-role node选项的情况下再传递一个无效的参数。</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-X.XX.X.jar -role node xx
</pre></div>
</div>
<p>首先你会看到“INFO...” 和 “ERROR”，而在其下就是有关Selenium-Grid的各个选项。
我们在这没有列出所有的选项， 是因为太长了；但是前面的若干行信息应该像这样：</p>
<div class="highlight-bash"><pre>Jul 19, 2012 10:10:39 AM org.openqa.grid.selenium.GridLauncher main<br/>
INFO: Launching a selenium grid node<br/>
org.openqa.grid.common.exception.GridConfigurationException: You need to specify a hub to register to using -hubHost X -hubPort 5555. The specified config was -hubHost null -hubPort 4444<br/>
        at org.openqa.grid.common.RegistrationRequest.validate(RegistrationRequest.java:610)<br/>
        at org.openqa.grid.internal.utils.SelfRegisteringRemote.startRemoteServer(SelfRegisteringRemote.java:88)<br/>
        at org.openqa.grid.selenium.GridLauncher.main(GridLauncher.java:72)<br/>
Error building the config :You need to specify a hub to register to using -hubHost X -hubPort 5555. The specified config was -hubHost null -hubPort 4444<br/>
Usage :<br/>
  -hubConfig:<br/>
        (hub) a JSON file following grid2 format.<br/>
<br/>
 -nodeTimeout:<br/>
        (node) &lt;XXXX&gt;  the timeout in seconds before the hub<br/>
          automatically ends a test that hasn't had aby activity than XX<br/>
          sec.The browser will be released for another test to use.This<br/>
          typically takes care of the client crashes.</pre>
</div>
</div>
<div class="section" id="common-errors">
<h2>常见错误<a class="headerlink" href="#common-errors" title="Permalink to this headline">¶</a></h2>
<div class="section" id="unable-to-acess-the-jarfile">
<h3>无法访问jar文件<a class="headerlink" href="#unable-to-acess-the-jarfile" title="Permalink to this headline">¶</a></h3>
<div class="highlight-bash"><div class="highlight"><pre>Unable to access jarfile selenium-server-standalone-X.XX.X.jar
</pre></div>
</div>
<p>这个错误在启动hub 或 node时都可能发生。
意思是Java不能找到selenium-server的jar文件，或者在命令行中进入到selenium-server-XXXX.jar文件所在的目录，或者指定一个到jar文件的明确路径。</p>
</div>
</div>
<div class="section" id="troubleshooting">
<h2>故障排除<a class="headerlink" href="#troubleshooting" title="Permalink to this headline">¶</a></h2>
