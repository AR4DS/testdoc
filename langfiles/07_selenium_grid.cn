#:page_title
"selenium Grid介绍"

#:previous_link
"06_test_design_considerations"

#:previous_title
"测试设计考虑"

#:next_link
"08_user_extensions"

#:next_title
"用户扩展"

#:side
:list
<li><a class="reference internal" href="#">Selenium-Grid</a><ul class="treeview">
<li><a class="reference internal" href="#quick-start">Quick Start</a></li>
<li><a class="reference internal" href="#what-is-selenium-grid">What is Selenium-Grid?</a></li>
<li><a class="reference internal" href="#when-to-use-it">When to Use It</a></li>
<li><a class="reference internal" href="#selenium-grid-2-0">Selenium-Grid 2.0</a></li>
<li><a class="reference internal" href="#selenium-grid-1-0">Selenium-Grid 1.0</a></li>
<li><a class="reference internal" href="#how-selenium-grid-works-with-a-hub-and-nodes">How Selenium-Grid Works–With a Hub and Nodes</a></li>
<li><a class="reference internal" href="#installation">Installation</a></li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#starting-selenium-grid">Starting Selenium-Grid</a><ul class="treeview" style="display: none;">
<li><a class="reference internal" href="#starting-a-hub">Starting a Hub</a></li>
<li class="last"><a class="reference internal" href="#starting-a-node">Starting a Node</a></li>
</ul>
</li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#configuring-selenium-grid">Configuring Selenium-Grid</a><ul class="treeview" style="display: none;">
<li><a class="reference internal" href="#default-configuration">Default Configuration</a></li>
<li><a class="reference internal" href="#json-configuration-file">JSON Configuration File</a></li>
<li class="last"><a class="reference internal" href="#configuring-via-the-command-line-options">Configuring Via the Command-Line Options</a></li>
</ul>
</li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#hub-configuration">Hub Configuration</a><ul class="treeview" style="display: none;">
<li class="last"><a class="reference internal" href="#specifying-the-port">Specifying the Port</a></li>
</ul>
</li>
<li><a class="reference internal" href="#node-configuration">Node Configuration</a></li>
<li><a class="reference internal" href="#timing-parameters">Timing Parameters</a></li>
<li><a class="reference internal" href="#getting-command-line-help">Getting Command-Line Help</a></li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#common-errors">Common Errors</a><ul class="treeview" style="display: none;">
<li class="last"><a class="reference internal" href="#unable-to-acess-the-jarfile">Unable to acess the jarfile</a></li>
</ul>
</li>
<li class="last"><a class="reference internal" href="#troubleshooting">Troubleshooting</a></li>

#:body
:body
<h1>Selenium-Grid<a class="headerlink" href="#selenium-grid" title="Permalink to this headline">¶</a></h1>
<p id="chapter07-reference"><em>注:  目前我们正在持续更新该文档，在此我们将给人们介绍一种全新的Selenium-Grid。
在接下来的几个月里我们将提供可用的样例和插图详细解释如何使用Selenium-Grid。</em></p>
<div class="section" id="quick-start">
<h2>快速入门<a class="headerlink" href="#quick-start" title="Permalink to this headline">¶</a></h2>
<p>如果你已经有使用Selenium做自动化测试的敬仰，那么你可能仅仅需要一个‘快速入门’就可以开始搭建并运行Selenium-Grid了。
本章有许多信息是面向各种技能等级的，但可能是太多；所以如果你要找的只是一个快速参考并快速尝试事情，请参考Selenium-Grid中的这篇文章<a class="reference external" href="http://code.google.com/p/selenium/wiki/Grid2">Selenium Grid2 Wiki</a>.</p>
</div>
<div class="section" id="what-is-selenium-grid">
<h2>什么是Selenium-Grid?<a class="headerlink" href="#what-is-selenium-grid" title="Permalink to this headline">¶</a></h2>
<p>Selenium-Grid允许你在不同机器不同浏览器上同时运行你的测试用例。也就是说，同一时间在不同的机器上运行的不同浏览器和操作系统上运行多个测试。
尤其是Selenium-Grid支持分布式测试执行。它允许你在<em>分布测试执行环境</em>中执行测试。</p>
</div>
<div class="section" id="when-to-use-it">
<h2>什么时候用它<a class="headerlink" href="#when-to-use-it" title="Permalink to this headline">¶</a></h2>
<p>通常来说，有两种原因，你可能想使用Selenium-Grid.</p>
<ul class="simple">
<li>在不同操作系统上的不同的浏览器的多个版本上运行测试。</li>
<li>节省执行一个完整测试套件的时间。</li>
</ul>
<p>Selenium-Grid通过在多个机器上并行运行测试来加速一个测试版本的执行速度。
比如：你的一个测试版本有100个用例，但是你搭建的Selenium-Grid支持在4台不同的机器（VM或者单独的物理机）去执行这些用例，
那么你完成一个测试版本的时间将是你在一台机器上运行的1/4。
对于大型的测试套件和长时间运行的测试套件，如执行大量的数据验证，这个将能显著节约时间。有些测试套件需要花几小时运行，
提升运行测试套件效率的另一个原因是缩短开发在checkin测试程序的代码后到获取测试结果之间的周转时间 。  
越来越多实践敏捷开发的团队都想尽可能快的获取测试反馈，而不是等了一个通宵后得到一个隔夜的结果。
</p>
<p>Selenium-Grid同样支持在多个运行环境中执行测试，具体而言就是同时运行多个浏览器。 比如： 
在虚拟机的‘grid’中分别搭建了测试需要支持的不同浏览器，  机器1是Internet Explorer 8，机器2是Internet Explorer 9，机器3是最新版的Chrome，
机器4是最新版的Firefox。 当测试套件运行时， Selenium-Grid注册每个测试浏览器的组合并分配每个测试到它要运行的测试浏览器上。</p>
<p>此外，可以有一个所有都是相同的浏览器类型和版本的‘grid’，比如：可以有一个包含4台机器并且每台都运行3个FF 12实例的‘grid’，
允许一个有效FF实例的‘server-farm’(某种意义上)。  当测试套件运行时每个测试都传递给Selenium-Grid，
然后在分配给下一个有效的 Firefox实例。 这种方式下一个测试套件在12个FF实例下并发执行，显著减少了测试一个套件所需的时间。</p>
<p>Selenium-Grid非常的灵活，这2个例子可以结合起来使用，配置每个浏览器版本都有多个实例 ，这样的配置可以同时支持并发执行和兼容性测试。</p>
</div>
<div class="section" id="selenium-grid-2-0">
<h2>Selenium-Grid 2.0<a class="headerlink" href="#selenium-grid-2-0" title="Permalink to this headline">¶</a></h2>
<p>Selenium-Grid 2.0是编写本文档时的最新发布版本(5/26/2012)。  它完全不同于Selenium-Grid1。  在Selenium-Grid2中合并了Selenium-RC服务器。
现在你仅需要下载一个 .jar文件就可以同时拥有远程的Selenium-RC-Server和Selenium-Grid。</p>
</div>
<div class="section" id="selenium-grid-1-0">
<h2>Selenium-Grid 1.0<a class="headerlink" href="#selenium-grid-1-0" title="Permalink to this headline">¶</a></h2>
<p>版本1是第一代的Selenium-Grid。如果是刚接触Selenium-Grid那么你应该使用版本2。
版本1已经升级并且包含了新的功能，支持Selenium-WebDriver， 然而遗留的测试系统可能仍然需要版本 1。 关于Selenium-Grid版本1的信息在这里找到
<a class="reference external" href="http://selenium-grid.seleniumhq.org/">Selenium-Grid站点</a>.</p>
</div>
<div class="section" id="how-selenium-grid-works-with-a-hub-and-nodes">
<h2>Selenium-Grid是如何与一个Hub和若干node工作的<a class="headerlink" href="#how-selenium-grid-works-with-a-hub-and-nodes" title="Permalink to this headline">¶</a></h2>
<p>一个‘grid’包括一个独立的hub和一到多个node。  它们都是通过selenium-server.jar启动的。 在这章的下面章节中我们列出了一些例子。</p>
<p>hub会接收一个带有浏览器和平台 (i.e. WINDOWS, LINUX, 等)信息的测试执行消息，这些信息指定了测试将要允许的环境。
hub‘知道’每个node的配置信息[因为之前node已经‘注册’过了]。 使用这些信息它就能选择出一个有效的符合浏览器和平台组合的node。
一旦node被选定，发送给hub的命令都将被初始化，这些命令都会转发给node并执行。node会运行浏览器并执行Selenium命令。
在这个浏览器中对应用程序进行测试。</p>
<p>用一个<a class="reference external" href="http://selenium-grid.seleniumhq.org/how_it_works.html">图表</a>可以更好的解释这个。
跳转到该页的第二张图 (第一张是Selenium-RC图解)。 第二张图用于说明Selenium-Grid 1，然而同样可以应用 并且是我们在这里所说内容的最好图解。
唯一不同的就是术语。替换‘Selenium Remote Control’为‘Selenium-Grid node’后该图就可以说明我们所描述的Selenium-Grid 2了。</p>
</div>
<div class="section" id="installation">
<h2>安装<a class="headerlink" href="#installation" title="Permalink to this headline">¶</a></h2>
<p>安装很简单，从<a class="reference external" href="http://seleniumhq.org/download/">SeleniumHq站点的下载页面
download page</a>下载 Selenium-Server jar文件。你可以在“Selenium-Server (formerly Selenium-RC)”片段下找到链接。</p>
<p>可以把它安装在任意你想存放的位置。你需要确保java可以在你的执行路径可以被运行，这个就可以从命令行来运行它。
如果它不能正确运行，验证你的系统环境变量中是否包含了java.exe。</p>
</div>
<div class="section" id="starting-selenium-grid">
<h2>启动Selenium-Grid<a class="headerlink" href="#starting-selenium-grid" title="Permalink to this headline">¶</a></h2>
<p>Generally you would start a hub first since nodes depend on a hub.  This is not abolutely necessary
however, since nodes can recognize when a hub has been started and vice-versa.  For learning
purposes though, it would easier to start the hub first, otherwise you’ll see error
messages that may not want to start off with your first time using Selenium-Grid.</p>
<div class="section" id="starting-a-hub">
<h3>Starting a Hub<a class="headerlink" href="#starting-a-hub" title="Permalink to this headline">¶</a></h3>
<p>To start a hub with default parameters, run the following command from a command-line shell.  This
will work on all the supported platforms, Windows Linux, or MacOs.</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-2.21.0.jar -role hub
</pre></div>
</div>
<p>This starts a hub using default parameter values.  We’ll explain these parameters in folowing
subsections.  Note that you will likely have to change the version number in the jar filename
depending on which version of the selenium-server you’re using.</p>
</div>
<div class="section" id="starting-a-node">
<h3>Starting a Node<a class="headerlink" href="#starting-a-node" title="Permalink to this headline">¶</a></h3>
<p>To start a node using default parameters, run the following command from a command-line.</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-2.21.0.jar -role node  -hub http://localhost:4444/grid/register
</pre></div>
</div>
<p>This assumes the hub has been started above using default parameters.  The default port the hub
uses to listen for new requests is port 4444.  This is why port 4444 was used in the URL for
locating the hub.  Also the use of ‘localhost’ assumes your node is running on the same machine
as your hub.  For getting started this is probably easiest.  If running the hub and node on
separate machines, simply replace ‘localhost’ with the hostname of the remote machine running the
hub.</p>
<p>WARNING:  Be sure to turn off the firewalls on the machine running your hub and nodes.  Otherwise
you may get connection errors.</p>
</div>
</div>
<div class="section" id="configuring-selenium-grid">
<h2>Configuring Selenium-Grid<a class="headerlink" href="#configuring-selenium-grid" title="Permalink to this headline">¶</a></h2>
<div class="section" id="default-configuration">
<h3>Default Configuration<a class="headerlink" href="#default-configuration" title="Permalink to this headline">¶</a></h3>
</div>
<div class="section" id="json-configuration-file">
<h3>JSON Configuration File<a class="headerlink" href="#json-configuration-file" title="Permalink to this headline">¶</a></h3>
</div>
<div class="section" id="configuring-via-the-command-line-options">
<h3>Configuring Via the Command-Line Options<a class="headerlink" href="#configuring-via-the-command-line-options" title="Permalink to this headline">¶</a></h3>
</div>
</div>
<div class="section" id="hub-configuration">
<h2>Hub Configuration<a class="headerlink" href="#hub-configuration" title="Permalink to this headline">¶</a></h2>
<p>To run the hub using the default options simply specify -role hub to the Selenim-Server</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-2.21.0.jar -hub
</pre></div>
</div>
<p>你将看到以下的日志输出。</p>
<div class="highlight-bash"><div class="highlight"><pre>
Jul 19, 2012 10:46:21 AM org.openqa.grid.selenium.GridLauncher main<br/>
INFO: Launching a selenium grid server<br/>
2012-07-19 10:46:25.082:INFO:osjs.Server:jetty-7.x.y-SNAPSHOT<br/>
2012-07-19 10:46:25.151:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContextHandler<span class="o">{</span>/,null<span class="o">}</span><br/>
2012-07-19 10:46:25.185:INFO:osjs.AbstractConnector:Started SocketConnector@0.0.0.0:4444
</pre></div>
</div>
<div class="section" id="specifying-the-port">
<h3>Specifying the Port<a class="headerlink" href="#specifying-the-port" title="Permalink to this headline">¶</a></h3>
<p>The default port used by the hub is 4444.  The port being referred to hear, is the TCP/IP port used when the
‘client’, that is, the automated tests connect to the Selenium-Grid hub.  If another application
on your computer is already using this port, or if, you already have a Selenium-Server started,
you’ll see the following message in the log output.</p>
<div class="highlight-bash"><div class="highlight"><pre>10:56:35.490 WARN - Failed to start: SocketListener0@0.0.0.0:4444<br/>
Exception in thread <span class="s2">"main"</span> java.net.BindException: Selenium is already running on port 4444. Or some other service is.
</pre></div>
</div>
<p>If this occurs you can either shutdown the other process that is using port 4444, or you can
tell Selenium-Grid to use a different port for its hub.  Use the -port option for changing the
port used by the hub.</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-2.21.0.jar -role hub -port 4441
</pre></div>
</div>
<p>This will work even if another hub is already running on the same machine, that is, as long as
they’re both not using port 4441.</p>
<p>You may, however, want to see what process is using port 4444 so you can allow the hub to use the
default.  To see the ports used by all running programs on your machine use the command.</p>
<div class="highlight-bash"><div class="highlight"><pre>netstat -a
</pre></div>
</div>
<p>This should work on all supported systems, Unix/Linux, MacOs, and Windows although additional options
beyond -a may be required.  Basically you need to display the process ID along with the port.  In
Unix you may ‘grep’ the output (use a pipe) from the port number to only display those records
you’re concerned with.</p>
</div>
</div>
<div class="section" id="node-configuration">
<h2>Node Configuration<a class="headerlink" href="#node-configuration" title="Permalink to this headline">¶</a></h2>
</div>
<div class="section" id="timing-parameters">
<h2>Timing Parameters<a class="headerlink" href="#timing-parameters" title="Permalink to this headline">¶</a></h2>
</div>
<div class="section" id="getting-command-line-help">
<h2>Getting Command-Line Help<a class="headerlink" href="#getting-command-line-help" title="Permalink to this headline">¶</a></h2>
<p>The Selenium-Server provides listings of available options with a brief description of each.
Currently (summer 2012), the command-line help has some oddities, but it can be helpful if you know
where to look and how to interpret the information.</p>
<p>The Selenium-Server provides two distinct functions, that of the Selenium-RC server
and that of Selenium-Grid.  These were likely written by different Selenium teams, and therefore
the command-line help for each function has ended up in two different places.  And, for the
new user, it may not be apparent at first which of these two you are viewing.</p>
<p>If you simply pass a -h option as you might first assume, you get the Selenium-RC Server options
but not those for Selenium-Grid.</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-2.21.0.jar -h
</pre></div>
</div>
<p>This would give you Selenium-RC’s server options.  If you want the command-line help for
Selenium-Grid, you first use the -hub or -node options to tell Selenium-Server you’re intereted
in Selenium-Grid, and then follow with a -h.</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-2.21.0.jar -role node -h
</pre></div>
</div>
<p>Or, for that matter, just pass a garbage argument to the -role node as follows.</p>
<div class="highlight-bash"><div class="highlight"><pre>java -jar selenium-server-standalone-2.21.0.jar -role node xx
</pre></div>
</div>
<p>You will first see “INFO...” and an “ERROR” but below that you’ll get the command-line options for
Selenium-Grid.  We won’t list the whole output here since it’s rather long, but the first few
lines look like this.</p>
<div class="highlight-bash"><pre>Jul 19, 2012 10:10:39 AM org.openqa.grid.selenium.GridLauncher main<br/>
INFO: Launching a selenium grid node<br/>
org.openqa.grid.common.exception.GridConfigurationException: You need to specify a hub to register to using -hubHost X -hubPort 5555. The specified config was -hubHost null -hubPort 4444<br/>
        at org.openqa.grid.common.RegistrationRequest.validate(RegistrationRequest.java:610)<br/>
        at org.openqa.grid.internal.utils.SelfRegisteringRemote.startRemoteServer(SelfRegisteringRemote.java:88)<br/>
        at org.openqa.grid.selenium.GridLauncher.main(GridLauncher.java:72)<br/>
Error building the config :You need to specify a hub to register to using -hubHost X -hubPort 5555. The specified config was -hubHost null -hubPort 4444<br/>
Usage :<br/>
  -hubConfig:<br/>
        (hub) a JSON file following grid2 format.<br/>
<br/>
 -nodeTimeout:<br/>
        (node) &lt;XXXX&gt;  the timeout in seconds before the hub<br/>
          automatically ends a test that hasn't had aby activity than XX<br/>
          sec.The browser will be released for another test to use.This<br/>
          typically takes care of the client crashes.</pre>
</div>
</div>
<div class="section" id="common-errors">
<h2>Common Errors<a class="headerlink" href="#common-errors" title="Permalink to this headline">¶</a></h2>
<div class="section" id="unable-to-acess-the-jarfile">
<h3>Unable to acess the jarfile<a class="headerlink" href="#unable-to-acess-the-jarfile" title="Permalink to this headline">¶</a></h3>
<div class="highlight-bash"><div class="highlight"><pre>Unable to access jarfile selenium-server-standalone-2.21.0.jar
</pre></div>
</div>
<p>This error can occur when starting up either a hub or node.
This means Java cannot find the selenium-server jar file.  Either run the command from the
directory where the selenium-server-XXXX.jar file is stored, or specify an explicit path to
the jar.</p>
</div>
</div>
<div class="section" id="troubleshooting">
<h2>Troubleshooting<a class="headerlink" href="#troubleshooting" title="Permalink to this headline">¶</a></h2>
