#:page_title
"网页元素定位技术"

#:previous_link
"14_installing_python_driver_client"

#:previous_title
"Python客户端驱动配置"

#:next_link
"16_migrating_from_rc_to_webdriver"

#:next_title
"从Selenium RC迁移到Selenium WebDriver"

#:side
:list
<li><a class="reference internal" href="#">定位技术</a><ul class="treeview">
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#useful-xpath-patterns">可用的XPATH模式</a><ul class="treeview" style="display: none;">
<li><a class="reference internal" href="#text">text定位</a></li>
<li><a class="reference internal" href="#starts-with">starts-with定位</a></li>
<li><a class="reference internal" href="#contains">contains定位</a></li>
<li class="last"><a class="reference internal" href="#siblings">siblings定位</a></li>
</ul>
</li>
<li class="expandable lastExpandable"><div class="hitarea expandable-hitarea lastExpandable-hitarea"></div><a class="reference internal" href="#starting-to-use-css-instead-of-xpath">开始使用 CSS替换XPATH</a><ul class="treeview" style="display: none;">
<li class="last"><a class="reference internal" href="#locating-elements-based-on-class">基于class的元素定位</a></li>
</ul>

#:body
:body
<h1>定位技术<a class="headerlink" href="#locating-techniques" title="Permalink to this headline">¶</a></h1>
<span class="target" id="appendix-locators-reference"></span><div class="section" id="useful-xpath-patterns">
<h2>可用的XPATH模式<a class="headerlink" href="#useful-xpath-patterns" title="Permalink to this headline">¶</a></h2>
<div class="section" id="text">
<h3>text定位<a class="headerlink" href="#text" title="Permalink to this headline">¶</a></h3>
<p>还未编写 - 基于节点的文本内容定位元素。</p>
</div>
<div class="section" id="starts-with">
<h3>starts-with定位<a class="headerlink" href="#starts-with" title="Permalink to this headline">¶</a></h3>
<p>许多站点为元素的id属性使用动态的值，这让它们很难去精确定位。一个简单的方法就是使用XPath功能，
然后基于你知道的元素的特征来定位。例如, 你的ids属性有固定的格式 <tt class="docutils literal"><span class="pre">&lt;input</span> <span class="pre">id="text-12345"</span> <span class="pre">/&gt;</span></tt> 其中 <tt class="docutils literal"><span class="pre">12345</span></tt> 是动态的数字
你可以使用下面的XPath: <tt class="docutils literal"><span class="pre">//input[starts-with(@id,</span> <span class="pre">'text-')]</span></tt></p>
</div>
<div class="section" id="contains">
<h3>contains定位<a class="headerlink" href="#contains" title="Permalink to this headline">¶</a></h3>
<p>如果某个元素可以通过一个被包含的值来定位，包含定位就可以被用到。演示一下, 元素 <tt class="docutils literal"><span class="pre">&lt;span</span> <span class="pre">class="top</span> <span class="pre">heading</span>
<span class="pre">bold"&gt;</span></tt>可以基于 ‘heading’ class定位而不需要‘top’ and ‘bold’ classes，使用的 XPath如下: <tt class="docutils literal"><span class="pre">//span[contains(@class,</span>
<span class="pre">'heading')]</span></tt>. 顺便说一下，使用CSS定位策略将比这更整洁（以及可能更快）
 <tt class="docutils literal"><span class="pre">css=span.heading</span></tt></p>
</div>
<div class="section" id="siblings">
<h3>siblings定位<a class="headerlink" href="#siblings" title="Permalink to this headline">¶</a></h3>
<p>还未编写 - 基于元素的姊妹关系定位元素。通常用于forms和tables。</p>
</div>
</div>
<div class="section" id="starting-to-use-css-instead-of-xpath">
<h2>开始使用CSS替换XPATH<a class="headerlink" href="#starting-to-use-css-instead-of-xpath" title="Permalink to this headline">¶</a></h2>
<div class="section" id="locating-elements-based-on-class">
<h3>基于class的元素定位<a class="headerlink" href="#locating-elements-based-on-class" title="Permalink to this headline">¶</a></h3>
<p>在XPath中为了通过相关的class来定位一个元素，你必须考虑元素是否包含多个class值以及它们的顺序如何。 然而使用CSS定位这个就简单多了(而且更快)。</p>
<ul class="simple">
<li>XPath: <tt class="docutils literal"><span class="pre">//div[contains(@class,</span> <span class="pre">'article-heading')]</span></tt></li>
<li>CSS: <tt class="docutils literal"><span class="pre">css=div.article-heading</span></tt></li>
</ul>
