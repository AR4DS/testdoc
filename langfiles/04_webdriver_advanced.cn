#:page_title
"selenium webdriver高级使用"

#:previous_link
"03_webdriver"

#:previous_title
"Selenium WebDriver"

#:next_link
"05_selenium_rc"

#:next_title
"Selenium 1 (Selenium RC)"

#:side
:list
<li><a class="reference internal" href="#">WebDriver: 高级使用</a><ul class="treeview">
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#explicit-and-implicit-waits">显示等待和隐式等待</a><ul class="treeview" style="display: none;">
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#explicit-waits">显示等待</a><ul class="treeview" style="display: none;">
<li class="last"><a class="reference internal" href="#expected-conditions">显示等待</a></li>
</ul>
</li>
<li class="last"><a class="reference internal" href="#implicit-waits">隐式等待</a></li>
</ul>
</li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#remotewebdriver">远程WebDriver</a><ul class="treeview" style="display: none;">
<li><a class="reference internal" href="#taking-a-screenshot">截屏</a></li>
<li><a class="reference internal" href="#using-a-firefoxprofile">使用Firefox配置</a></li>
<li class="last"><a class="reference internal" href="#using-chromeoptions">使用Chrome选项</a></li>
</ul>
</li>
<li><a class="reference internal" href="#advanceduserinteractions">高级用户交互</a></li>
<li class="expandable"><div class="hitarea expandable-hitarea"></div><a class="reference internal" href="#browser-startup-manipulation">浏览器启动操作</a><ul class="treeview" style="display: none;">
<li class="expandable lastExpandable"><div class="hitarea expandable-hitarea lastExpandable-hitarea"></div><a class="reference internal" href="#using-a-proxy">使用代理</a><ul class="treeview" style="display: none;">
<li><a class="reference internal" href="#internet-explorer">Internet Explorer</a></li>
<li><a class="reference internal" href="#chrome">Chrome</a></li>
<li><a class="reference internal" href="#firefox">Firefox</a></li>
<li class="last"><a class="reference internal" href="#opera">Opera</a></li>
</ul>
</li>
</ul>
</li>
<li><a class="reference internal" href="#html5">HTML5</a></li>
<li class="last"><a class="reference internal" href="#parallelizing-your-test-runs">并行化执行测试</a></li>
</ul>

#:body
:body
<h1>WebDriver: 高级用法<a class="headerlink" href="#webdriver-advanced-usage" title="Permalink to this headline">¶</a></h1>
<div class="section" id="explicit-and-implicit-waits">
<span id="explicit-and-implicit-waits-reference"></span><span id="chapter04-reference"></span><h2>显示等待和隐式等待<a class="headerlink" href="#explicit-and-implicit-waits" title="Permalink to this headline">¶</a></h2>
<p>等待是在执行自动化任务一段时间后才继续下一步。</p>
<div class="section" id="explicit-waits">
<h3>显示等待<a class="headerlink" href="#explicit-waits" title="Permalink to this headline">¶</a></h3>
<p>一个显示等待是你定义的一段代码，用于等待某个条件发生然后再继续执行后续代码。最坏的一个例子当属Thread.sleep()，它用一段明确的等待时间作为条件。WebDriver有一些方便的方法可以帮助你写出按需等待的代码。WebDriverWait结合ExpectedCondition便是其中一种。</p>
<div class="highlight-java"><div class="highlight"><pre><span class="n">WebDriver</span> <span class="n">driver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FirefoxDriver</span><span class="o">();</span>
<span class="n">driver</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"http://somedomain/url_that_delays_loading"</span><span class="o">);</span>
<span class="n">WebElement</span> <span class="n">myDynamicElement</span> <span class="o">=</span> <span class="o">(</span><span class="k">new</span> <span class="n">WebDriverWait</span><span class="o">(</span><span class="n">driver</span><span class="o">,</span> <span class="mi">10</span><span class="o">))</span>
  <span class="o">.</span><span class="na">until</span><span class="o">(</span><span class="n">ExpectedConditions</span><span class="o">.</span><span class="na">presenceOfElementLocated</span><span class="o">(</span><span class="n">By</span><span class="o">.</span><span class="na">id</span><span class="o">(</span><span class="s">"myDynamicElement"</span><span class="o">)));</span>
</pre></div>
</div>
<div class="highlight-csharp" style="display: none;"><div class="highlight"><pre><span class="n">IWebDriver</span> <span class="n">driver</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FirefoxDriver</span><span class="p">();</span>
<span class="n">driver</span><span class="p">.</span><span class="n">Url</span> <span class="p">=</span> <span class="s">"http://somedomain/url_that_delays_loading"</span><span class="p">;</span>
<span class="n">WebDriverWait</span> <span class="n">wait</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span> <span class="n">TimeSpan</span><span class="p">.</span><span class="n">FromSeconds</span><span class="p">(</span><span class="m">10</span><span class="p">));</span>
<span class="n">IWebElement</span> <span class="n">myDynamicElement</span> <span class="p">=</span> <span class="n">wait</span><span class="p">.</span><span class="n">Until</span><span class="p">&lt;</span><span class="n">IWebElement</span><span class="p">&gt;((</span><span class="n">d</span><span class="p">)</span> <span class="p">=&gt;</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="n">d</span><span class="p">.</span><span class="n">FindElement</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">Id</span><span class="p">(</span><span class="s">"someDynamicElement"</span><span class="p">));</span>
    <span class="p">});</span>
</pre></div>
</div>
<div class="highlight-python" style="display: none;"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">from</span> <span class="nn">selenium.webdriver.common.by</span> <span class="kn">import</span> <span class="n">By</span>
<span class="kn">from</span> <span class="nn">selenium.webdriver.support.ui</span> <span class="kn">import</span> <span class="n">WebDriverWait</span> <span class="c"># available since 2.4.0</span>
<span class="kn">from</span> <span class="nn">selenium.webdriver.support</span> <span class="kn">import</span> <span class="n">expected_conditions</span> <span class="k">as</span> <span class="n">EC</span> <span class="c"># available since 2.26.0</span>

<span class="n">ff</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Firefox</span><span class="p">()</span>
<span class="n">ff</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">"http://somedomain/url_that_delays_loading"</span><span class="p">)</span>
<span class="k">try</span><span class="p">:</span>
    <span class="n">element</span> <span class="o">=</span> <span class="n">WebDriverWait</span><span class="p">(</span><span class="n">ff</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">until</span><span class="p">(</span><span class="n">EC</span><span class="o">.</span><span class="n">presence_of_element_located</span><span class="p">((</span><span class="n">By</span><span class="o">.</span><span class="n">ID</span><span class="p">,</span> <span class="s">"myDynamicElement"</span><span class="p">)))</span>
<span class="k">finally</span><span class="p">:</span>
    <span class="n">ff</span><span class="o">.</span><span class="n">quit</span><span class="p">()</span>
</pre></div>
</div>
<div class="highlight-ruby" style="display: none;"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">'rubygems'</span> <span class="c1"># not required for ruby 1.9 or if you installed without gem</span>
<span class="nb">require</span> <span class="s1">'selenium-webdriver'</span>

<span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
<span class="n">driver</span><span class="o">.</span><span class="n">get</span> <span class="s2">"http://somedomain/url_that_delays_loading"</span>

<span class="n">wait</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="no">Wait</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:timeout</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">)</span> <span class="c1"># seconds</span>
<span class="k">begin</span>
  <span class="n">element</span> <span class="o">=</span> <span class="n">wait</span><span class="o">.</span><span class="n">until</span> <span class="p">{</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">"some-dynamic-element"</span><span class="p">)</span> <span class="p">}</span>
<span class="k">ensure</span>
  <span class="n">driver</span><span class="o">.</span><span class="n">quit</span>
<span class="k">end</span>
</pre></div>
</div>
<p>这段代码会等待10秒直到抛出TimeoutException或者它找到了相关Element，在0-10秒返回该Element。默认情况下，WebDriverWait每500ms调用一次ExpectedCondition直到其成功返回。对于Boolean类型的ExpectedCondition而言，表示成功的返回值是true，而对于所有其他类型的ExpectedCondition而言则是非空返回值。</p>
<p>本例与第一个<a class="reference internal" href="#implicit-waits">隐式等待</a> 例子在功能上是等价的.</p>
<div class="section" id="expected-conditions">
<h4>Expected Conditions<a class="headerlink" href="#expected-conditions" title="Permalink to this headline">¶</a></h4>
<p>在自动化web浏览器时有一些常用的条件。下面列出了每个条件的实现。Java恰巧有方便的方法,因此您不需要自己编写一个ExpectedCondition类或为它们创建自己的实用程序包。</p>
<ul class="simple">
<li>元素可点击–元素已显示并且可用。</li>
</ul>
<div class="highlight-java"><div class="highlight"><pre><span class="n">WebDriverWait</span> <span class="n">wait</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WebDriverWait</span><span class="o">(</span><span class="n">driver</span><span class="o">,</span> <span class="mi">10</span><span class="o">);</span>
<span class="n">WebElement</span> <span class="n">element</span> <span class="o">=</span> <span class="n">wait</span><span class="o">.</span><span class="na">until</span><span class="o">(</span><span class="n">ExpectedConditions</span><span class="o">.</span><span class="na">elementToBeClickable</span><span class="o">(</span><span class="n">By</span><span class="o">.</span><span class="na">id</span><span class="o">(</span><span class="s">"someid"</span><span class="o">)));</span>
</pre></div>
</div>
<div class="highlight-python" style="display: none;"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">selenium.webdriver.support</span> <span class="kn">import</span> <span class="n">expected_conditions</span> <span class="k">as</span> <span class="n">EC</span>
<span class="n">wait</span> <span class="o">=</span> <span class="n">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">element</span> <span class="o">=</span> <span class="n">wait</span><span class="o">.</span><span class="n">until</span><span class="p">(</span><span class="n">EC</span><span class="o">.</span><span class="n">element_to_be_clickable</span><span class="p">((</span><span class="n">By</span><span class="o">.</span><span class="n">Id</span><span class="p">,</span><span class="s">'someid'</span><span class="p">)))</span>
</pre></div>
</div>
<p>ExpectedConditions包 (<a class="reference external" href="http://selenium.googlecode.com/git/docs/api/java/org/openqa/selenium/support/ui/ExpectedConditions.html">Java</a>)  (<a class="reference external" href="http://selenium.googlecode.com/git/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html">Python</a>) (<a class="reference external" href="http://selenium.googlecode.com/git/docs/api/dotnet/html/AllMembers_T_OpenQA_Selenium_Support_UI_ExpectedConditions.htm">.NET</a>) 含有一组可同WebDriverWait一同使用的预定义条件。</p>
</div>
</div>
<div class="section" id="implicit-waits">
<h3>隐式等待<a class="headerlink" href="#implicit-waits" title="Permalink to this headline">¶</a></h3>
<p>隐式等待使得WebDriver在查找一个Element或者Element数组时，每隔一段特定的时间就会轮询一次DOM，如果Element或数组没有马上被发现的话。默认设置是0。一旦设置，这个隐式等待会在WebDriver对象实例的整个生命周期起作用。</p>
<div class="highlight-java"><div class="highlight"><pre><span class="n">WebDriver</span> <span class="n">driver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FirefoxDriver</span><span class="o">();</span>
<span class="n">driver</span><span class="o">.</span><span class="na">manage</span><span class="o">().</span><span class="na">timeouts</span><span class="o">().</span><span class="na">implicitlyWait</span><span class="o">(</span><span class="mi">10</span><span class="o">,</span> <span class="n">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">);</span>
<span class="n">driver</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"http://somedomain/url_that_delays_loading"</span><span class="o">);</span>
<span class="n">WebElement</span> <span class="n">myDynamicElement</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="na">findElement</span><span class="o">(</span><span class="n">By</span><span class="o">.</span><span class="na">id</span><span class="o">(</span><span class="s">"myDynamicElement"</span><span class="o">));</span>
</pre></div>
</div>
<div class="highlight-csharp" style="display: none;"><div class="highlight"><pre><span class="n">WebDriver</span> <span class="n">driver</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FirefoxDriver</span><span class="p">();</span>
<span class="n">driver</span><span class="p">.</span><span class="n">Manage</span><span class="p">().</span><span class="n">Timeouts</span><span class="p">().</span><span class="n">ImplicitlyWait</span><span class="p">(</span><span class="n">TimeSpan</span><span class="p">.</span><span class="n">FromSeconds</span><span class="p">(</span><span class="m">10</span><span class="p">));</span>
<span class="n">driver</span><span class="p">.</span><span class="n">Url</span> <span class="p">=</span> <span class="s">"http://somedomain/url_that_delays_loading"</span><span class="p">;</span>
<span class="n">IWebElement</span> <span class="n">myDynamicElement</span> <span class="p">=</span> <span class="n">driver</span><span class="p">.</span><span class="n">FindElement</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">Id</span><span class="p">(</span><span class="s">"someDynamicElement"</span><span class="p">));</span>
</pre></div>
</div>
<div class="highlight-python" style="display: none;"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>

<span class="n">ff</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Firefox</span><span class="p">()</span>
<span class="n">ff</span><span class="o">.</span><span class="n">implicitly_wait</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c"># seconds</span>
<span class="n">ff</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">"http://somedomain/url_that_delays_loading"</span><span class="p">)</span>
<span class="n">myDynamicElement</span> <span class="o">=</span> <span class="n">ff</span><span class="o">.</span><span class="n">find_element_by_id</span><span class="p">(</span><span class="s">"myDynamicElement"</span><span class="p">)</span>
</pre></div>
</div>
<div class="highlight-ruby" style="display: none;"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">'rubygems'</span> <span class="c1"># not required for ruby 1.9 or if you installed without gem</span>
<span class="nb">require</span> <span class="s1">'selenium-webdriver'</span>

<span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span>
<span class="n">driver</span><span class="o">.</span><span class="n">manage</span><span class="o">.</span><span class="n">timeouts</span><span class="o">.</span><span class="n">implicit_wait</span> <span class="o">=</span> <span class="mi">10</span> <span class="c1"># seconds</span>

<span class="n">driver</span><span class="o">.</span><span class="n">get</span> <span class="s2">"http://somedomain/url_that_delays_loading"</span>
<span class="n">element</span> <span class="o">=</span> <span class="n">driver</span><span class="o">.</span><span class="n">find_element</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">"some-dynamic-element"</span><span class="p">)</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="remotewebdriver">
<h2>RemoteWebDriver<a class="headerlink" href="#remotewebdriver" title="Permalink to this headline">¶</a></h2>
<div class="section" id="taking-a-screenshot">
<h3>Taking a Screenshot<a class="headerlink" href="#taking-a-screenshot" title="Permalink to this headline">¶</a></h3>
<div class="highlight-java"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.openqa.selenium.OutputType</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.openqa.selenium.TakesScreenshot</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.openqa.selenium.WebDriver</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.openqa.selenium.remote.Augmenter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.openqa.selenium.remote.DesiredCapabilities</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.openqa.selenium.remote.RemoteWebDriver</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Testing</span> <span class="o">{</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">myTest</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="n">WebDriver</span> <span class="n">driver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RemoteWebDriver</span><span class="o">(</span>
                                <span class="k">new</span> <span class="nf">URL</span><span class="o">(</span><span class="s">"http://localhost:4444/wd/hub"</span><span class="o">),</span> 
                                <span class="n">DesiredCapabilities</span><span class="o">.</span><span class="na">firefox</span><span class="o">());</span>
        
        <span class="n">driver</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"http://www.google.com"</span><span class="o">);</span>
        
        <span class="c1">// RemoteWebDriver does not implement the TakesScreenshot class</span>
        <span class="c1">// if the driver does have the Capabilities to take a screenshot</span>
        <span class="c1">// then Augmenter will add the TakesScreenshot methods to the instance</span>
        <span class="n">WebDriver</span> <span class="n">augmentedDriver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Augmenter</span><span class="o">().</span><span class="na">augment</span><span class="o">(</span><span class="n">driver</span><span class="o">);</span>
        <span class="n">File</span> <span class="n">screenshot</span> <span class="o">=</span> <span class="o">((</span><span class="n">TakesScreenshot</span><span class="o">)</span><span class="n">augmentedDriver</span><span class="o">).</span>
                            <span class="n">getScreenshotAs</span><span class="o">(</span><span class="n">OutputType</span><span class="o">.</span><span class="na">FILE</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
</div>
<div class="highlight-csharp" style="display: none;"><div class="highlight"><pre><span class="c1">// Add this class to your code and use this instead of RemoteWebDriver</span>
<span class="c1">// You will then be able to cast it to ITakesScreenshot and call GetScreenshot</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">ScreenShotRemoteWebDriver</span> <span class="p">:</span> <span class="n">RemoteWebDriver</span><span class="p">,</span> <span class="n">ITakesScreenshot</span>
<span class="p">{</span>
       <span class="k">public</span> <span class="nf">ScreenShotRemoteWebDriver</span><span class="p">(</span><span class="n">Uri</span> <span class="n">RemoteAdress</span><span class="p">,</span> <span class="n">ICapabilities</span> <span class="n">capabilities</span><span class="p">)</span>
       <span class="p">:</span> <span class="k">base</span><span class="p">(</span><span class="n">RemoteAdress</span><span class="p">,</span> <span class="n">capabilities</span><span class="p">)</span>
       <span class="p">{</span>           
       <span class="p">}</span>

       <span class="c1">/// &lt;summary&gt;</span>
       <span class="c1">/// Gets a &lt;see cref="Screenshot"/&gt; object representing the image of the page on the screen.</span>
       <span class="c1">/// &lt;/summary&gt;</span>
       <span class="c1">/// &lt;returns&gt;A &lt;see cref="Screenshot"/&gt; object containing the image.&lt;/returns&gt;</span>
       <span class="k">public</span> <span class="n">Screenshot</span> <span class="nf">GetScreenshot</span><span class="p">()</span>
       <span class="p">{</span>
           <span class="c1">// Get the screenshot as base64.</span>
           <span class="n">Response</span> <span class="n">screenshotResponse</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Execute</span><span class="p">(</span><span class="n">DriverCommand</span><span class="p">.</span><span class="n">Screenshot</span><span class="p">,</span> <span class="k">null</span><span class="p">);</span>
           <span class="kt">string</span> <span class="n">base64</span> <span class="p">=</span> <span class="n">screenshotResponse</span><span class="p">.</span><span class="n">Value</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>

           <span class="c1">// ... and convert it.</span>
           <span class="k">return</span> <span class="k">new</span> <span class="nf">Screenshot</span><span class="p">(</span><span class="n">base64</span><span class="p">);</span>
       <span class="p">}</span>
<span class="p">}</span>


<span class="c1">// And then the usage would be:</span>

<span class="n">ScreenShotRemoteWebDriver</span> <span class="n">webDriver</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ScreenShotRemoteWebDriver</span><span class="p">(</span><span class="k">new</span> <span class="n">Uri</span><span class="p">(</span><span class="s">"http://127.0.0.1:4444/wd/hub"</span><span class="p">),</span> <span class="n">DesiredCapabilities</span><span class="p">.</span><span class="n">Firefox</span><span class="p">());</span>
<span class="c1">// ... do stuff with webDriver</span>
<span class="n">Screenshot</span> <span class="n">ss</span> <span class="p">=</span> <span class="p">((</span><span class="n">ITakesScreenshot</span><span class="p">)</span><span class="n">webDriver</span><span class="p">).</span><span class="n">GetScreenshot</span><span class="p">();</span>
<span class="kt">string</span> <span class="n">screenshot</span> <span class="p">=</span> <span class="n">ss</span><span class="p">.</span><span class="n">AsBase64EncodedString</span><span class="p">;</span>
<span class="kt">byte</span><span class="p">[]</span> <span class="n">screenshotAsByteArray</span> <span class="p">=</span> <span class="n">ss</span><span class="p">.</span><span class="n">AsByteArray</span><span class="p">;</span>
<span class="n">ss</span><span class="p">.</span><span class="n">SaveAsFile</span><span class="p">(</span><span class="n">activeDir</span> <span class="p">+</span> <span class="n">TestSuiteName</span> <span class="p">+</span> <span class="s">"//"</span> <span class="p">+</span> <span class="n">FileNanme</span> <span class="p">+</span> <span class="n">imageFormat</span><span class="p">,</span> <span class="n">ImageFormat</span><span class="p">.</span><span class="n">Jpeg</span><span class="p">);</span>
</pre></div>
</div>
<div class="highlight-python" style="display: none;"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>

<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Remote</span><span class="p">(</span><span class="s">"http://localhost:4444/wd/hub"</span><span class="p">,</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">DesiredCapabilities</span><span class="o">.</span><span class="n">FIREFOX</span><span class="p">)</span>
<span class="n">driver</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">"http://www.google.com"</span><span class="p">)</span>
<span class="n">driver</span><span class="o">.</span><span class="n">get_screenshot_as_file</span><span class="p">(</span><span class="s">'/Screenshots/google.png'</span><span class="p">)</span>
</pre></div>
</div>
<div class="highlight-ruby" style="display: none;"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">'rubygems'</span>
<span class="nb">require</span> <span class="s1">'selenium-webdriver'</span>

<span class="k">begin</span>
  <span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:remote</span><span class="p">,</span> <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="s2">"http://localhost:4444/wd/hub"</span><span class="p">,</span> <span class="ss">:desired_capabilities</span> <span class="o">=&gt;</span> <span class="ss">:firefox</span>
  <span class="n">driver</span><span class="o">.</span><span class="n">get</span> <span class="s2">"http://www.google.com"</span>
  <span class="n">driver</span><span class="o">.</span><span class="n">save_screenshot</span> <span class="s2">"/Screenshots/google.png"</span>
<span class="k">ensure</span>
  <span class="n">driver</span><span class="o">.</span><span class="n">quit</span>
<span class="k">end</span>
</pre></div>
</div>
</div>
<div class="section" id="using-a-firefoxprofile">
<h3>Using a FirefoxProfile<a class="headerlink" href="#using-a-firefoxprofile" title="Permalink to this headline">¶</a></h3>
<div class="highlight-java"><div class="highlight"><pre><span class="n">FirefoxProfile</span> <span class="n">fp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FirefoxProfile</span><span class="o">();</span>
<span class="c1">// set something on the profile...</span>
<span class="n">DesiredCapabilities</span> <span class="n">dc</span> <span class="o">=</span> <span class="n">DesiredCapabilities</span><span class="o">.</span><span class="na">firefox</span><span class="o">();</span>
<span class="n">dc</span><span class="o">.</span><span class="na">setCapability</span><span class="o">(</span><span class="n">FirefoxDriver</span><span class="o">.</span><span class="na">PROFILE</span><span class="o">,</span> <span class="n">fp</span><span class="o">);</span>
<span class="n">WebDriver</span> <span class="n">driver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RemoteWebDriver</span><span class="o">(</span><span class="n">dc</span><span class="o">);</span>
</pre></div>
</div>
<div class="highlight-python" style="display: none;"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="n">fp</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">FirefoxProfile</span><span class="p">()</span>
<span class="c"># set something on the profile...</span>
<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Remote</span><span class="p">(</span><span class="n">desired_capabilities</span><span class="o">=</span><span class="n">webdriver</span><span class="o">.</span><span class="n">DesiredCapabilities</span><span class="o">.</span><span class="n">FIREFOX</span><span class="p">,</span> <span class="n">browser_profile</span><span class="o">=</span><span class="n">fp</span><span class="p">)</span>
</pre></div>
</div>
</div>
<div class="section" id="using-chromeoptions">
<h3>Using ChromeOptions<a class="headerlink" href="#using-chromeoptions" title="Permalink to this headline">¶</a></h3>
<div class="highlight-java"><div class="highlight"><pre><span class="n">ChromeOptions</span> <span class="n">options</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ChromeOptions</span><span class="o">();</span>
<span class="c1">// set some options</span>
<span class="n">DesiredCapabilities</span> <span class="n">dc</span> <span class="o">=</span> <span class="n">DesiredCapabilities</span><span class="o">.</span><span class="na">chrome</span><span class="o">();</span>
<span class="n">dc</span><span class="o">.</span><span class="na">setCapability</span><span class="o">(</span><span class="n">ChromeOptions</span><span class="o">.</span><span class="na">CAPABILITY</span><span class="o">,</span> <span class="n">options</span><span class="o">);</span>
<span class="n">WebDriver</span> <span class="n">driver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RemoteWebDriver</span><span class="o">(</span><span class="n">dc</span><span class="o">);</span>
</pre></div>
</div>
<div class="highlight-python" style="display: none;"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="n">options</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">ChromeOptions</span><span class="p">()</span>
<span class="c"># set some options</span>
<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Remote</span><span class="p">(</span><span class="n">desired_capabilities</span><span class="o">=</span><span class="n">options</span><span class="o">.</span><span class="n">to_capabilities</span><span class="p">())</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="advanceduserinteractions">
<h2>高级用户交互<a class="headerlink" href="#advanceduserinteractions" title="Permalink to this headline">¶</a></h2>
<p>Actions类允许你创建一个Actions链然后执行它们。有数不清的可能组合。以下是一些您可能用到的常见交互。完整的Action列表，请参看API文档<a class="reference external" href="http://selenium.googlecode.com/git/docs/api/java/index.html?org/openqa/selenium/interactions/Actions.html">Java</a>
<a class="reference external" href="http://selenium.googlecode.com/git/docs/api/dotnet/html/AllMembers_T_OpenQA_Selenium_Interactions_Actions.htm">C#</a>
<a class="reference external" href="http://selenium.googlecode.com/git/docs/api/rb/Selenium/WebDriver/ActionBuilder.html">Ruby</a>
<a class="reference external" href="http://selenium.googlecode.com/git/docs/api/py/webdriver/selenium.webdriver.common.action_chains.html">Python</a></p>
<p>高级用户交互要求启用native events。下表是当前native events的支持矩阵：</p>
<table border="1" class="docutils">
<colgroup>
<col width="19%">
<col width="3%">
<col width="3%">
<col width="3%">
<col width="3%">
<col width="7%">
<col width="7%">
<col width="14%">
<col width="12%">
<col width="11%">
<col width="6%">
<col width="8%">
<col width="3%">
</colgroup>
<thead valign="bottom">
<tr class="row-odd"><th class="head">platform</th>
<th class="head">IE6</th>
<th class="head">IE7</th>
<th class="head">IE8</th>
<th class="head">IE9</th>
<th class="head">FF3.6</th>
<th class="head">FF10+</th>
<th class="head">Chrome stable</th>
<th class="head">Chrome beta</th>
<th class="head">Chrome dev</th>
<th class="head">Opera</th>
<th class="head">Android</th>
<th class="head">iOS</th>
</tr>
</thead>
<tbody valign="top">
<tr class="row-even"><td>Windows XP</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>n/a</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>?</td>
<td>Y <a class="footnote-reference" href="#id9" id="id3">[1]</a></td>
<td>n/a</td>
</tr>
<tr class="row-odd"><td>Windows 7</td>
<td>n/a</td>
<td>n/a</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>?</td>
<td>Y <a class="footnote-reference" href="#id9" id="id4">[1]</a></td>
<td>n/a</td>
</tr>
<tr class="row-even"><td>Linux (Ubuntu)</td>
<td>n/a</td>
<td>n/a</td>
<td>n/a</td>
<td>n/a</td>
<td>Y <a class="footnote-reference" href="#id10" id="id5">[2]</a></td>
<td>Y <a class="footnote-reference" href="#id10" id="id6">[2]</a></td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>?</td>
<td>Y <a class="footnote-reference" href="#id9" id="id7">[1]</a></td>
<td>n/a</td>
</tr>
<tr class="row-odd"><td>Mac OSX</td>
<td>n/a</td>
<td>n/a</td>
<td>n/a</td>
<td>n/a</td>
<td>N</td>
<td>N</td>
<td>Y</td>
<td>Y</td>
<td>Y</td>
<td>?</td>
<td>Y <a class="footnote-reference" href="#id9" id="id8">[1]</a></td>
<td>N</td>
</tr>
<tr class="row-even"><td>Mobile Device</td>
<td>n/a</td>
<td>n/a</td>
<td>n/a</td>
<td>n/a</td>
<td>n/a</td>
<td>?</td>
<td>n/a</td>
<td>n/a</td>
<td>n/a</td>
<td>?</td>
<td>Y</td>
<td>N</td>
</tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id9" rules="none">
<colgroup><col class="label"><col></colgroup>
<tbody valign="top">
<tr><td class="label">[1]</td><td><em>(<a class="fn-backref" href="#id3">1</a>, <a class="fn-backref" href="#id4">2</a>, <a class="fn-backref" href="#id7">3</a>, <a class="fn-backref" href="#id8">4</a>)</em> Using the emulator</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id10" rules="none">
<colgroup><col class="label"><col></colgroup>
<tbody valign="top">
<tr><td class="label">[2]</td><td><em>(<a class="fn-backref" href="#id5">1</a>, <a class="fn-backref" href="#id6">2</a>)</em> With explicitly enabling native events</td></tr>
</tbody>
</table>
</div>
<div class="section" id="browser-startup-manipulation">
<h2>浏览器启动操作<a class="headerlink" href="#browser-startup-manipulation" title="Permalink to this headline">¶</a></h2>
<p>Todo</p>
<p>主题包括：</p>
<ul class="simple">
<li>恢复cookies</li>
<li>更改firefox配置文件</li>
<li>运行浏览器与插件running browsers with plugins</li>
</ul>
<div class="section" id="using-a-proxy">
<h3>使用代理<a class="headerlink" href="#using-a-proxy" title="Permalink to this headline">¶</a></h3>
<div class="section" id="internet-explorer">
<h4>Internet Explorer<a class="headerlink" href="#internet-explorer" title="Permalink to this headline">¶</a></h4>
<p>最简单也是推荐的方法，是在运行测试的机器上手动设置代理。如果做不到或者你想让你的测试运行在不同的配置或代理中，那么你需要运用接下来这种使用Capabilities对象的技术了。它会暂时改变系统的代理设置，并在测试结束后再改回原来的设置。</p>
<div class="highlight-java"><div class="highlight"><pre><span class="n">String</span> <span class="n">PROXY</span> <span class="o">=</span> <span class="s">"localhost:8080"</span><span class="o">;</span>

<span class="n">org</span><span class="o">.</span><span class="na">openqa</span><span class="o">.</span><span class="na">selenium</span><span class="o">.</span><span class="na">Proxy</span> <span class="n">proxy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">org</span><span class="o">.</span><span class="na">openqa</span><span class="o">.</span><span class="na">selenium</span><span class="o">.</span><span class="na">Proxy</span><span class="o">();</span>
<span class="n">proxy</span><span class="o">.</span><span class="na">setHttpProxy</span><span class="o">(</span><span class="n">PROXY</span><span class="o">)</span>
     <span class="o">.</span><span class="na">setFtpProxy</span><span class="o">(</span><span class="n">PROXY</span><span class="o">)</span>
     <span class="o">.</span><span class="na">setSslProxy</span><span class="o">(</span><span class="n">PROXY</span><span class="o">);</span>
<span class="n">DesiredCapabilities</span> <span class="n">cap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DesiredCapabailities</span><span class="o">();</span>
<span class="n">cap</span><span class="o">.</span><span class="na">setCapability</span><span class="o">(</span><span class="n">CapabilityType</span><span class="o">.</span><span class="na">PROXY</span><span class="o">,</span> <span class="n">proxy</span><span class="o">);</span>

<span class="n">WebDriver</span> <span class="n">driver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">InternetExplorerDriver</span><span class="o">(</span><span class="n">cap</span><span class="o">);</span>
</pre></div>
</div>
<div class="highlight-python" style="display: none;"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>

<span class="n">PROXY</span> <span class="o">=</span> <span class="s">"localhost:8080"</span>

<span class="n">webdriver</span><span class="o">.</span><span class="n">DesiredCapabilities</span><span class="o">.</span><span class="n">INTERNETEXPLORER</span><span class="p">[</span><span class="s">'proxy'</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"httpProxy"</span><span class="p">:</span><span class="n">PROXY</span><span class="p">,</span>
    <span class="s">"ftpProxy"</span><span class="p">:</span><span class="n">PROXY</span><span class="p">,</span>
    <span class="s">"sslProxy"</span><span class="p">:</span><span class="n">PROXY</span><span class="p">,</span>
    <span class="s">"noProxy"</span><span class="p">:</span><span class="bp">None</span><span class="p">,</span>
    <span class="s">"proxyType"</span><span class="p">:</span><span class="s">"MANUAL"</span><span class="p">,</span>
    <span class="s">"class"</span><span class="p">:</span><span class="s">"org.openqa.selenium.Proxy"</span><span class="p">,</span>
    <span class="s">"autodetect"</span><span class="p">:</span><span class="bp">False</span>
<span class="p">}</span>

<span class="c"># you have to use remote, otherwise you'll have to code it yourself in python to </span>
<span class="c"># dynamically changing the system proxy preferences</span>
<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Remote</span><span class="p">(</span><span class="s">"http://localhost:4444/wd/hub"</span><span class="p">,</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">DesiredCapabilities</span><span class="o">.</span><span class="n">INTERNETEXPLORER</span><span class="p">)</span>
</pre></div>
</div>
<div class="highlight-ruby" style="display: none;"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">'rubygems'</span> 
<span class="nb">require</span> <span class="s1">'selenium-webdriver'</span>

<span class="no">PROXY</span> <span class="o">=</span> <span class="s2">"localhost:8080"</span>

<span class="n">proxy</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="no">Proxy</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
  <span class="ss">:http</span>     <span class="o">=&gt;</span> <span class="no">PROXY</span><span class="p">,</span>
  <span class="ss">:ftp</span>      <span class="o">=&gt;</span> <span class="no">PROXY</span><span class="p">,</span>
  <span class="ss">:ssl</span>      <span class="o">=&gt;</span> <span class="no">PROXY</span>
<span class="p">)</span>

<span class="n">caps</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Remote</span><span class="p">:</span><span class="ss">:Capabilities</span><span class="o">.</span><span class="n">ie</span><span class="p">(</span><span class="ss">:proxy</span> <span class="o">=&gt;</span> <span class="n">proxy</span><span class="p">)</span>

<span class="c1"># you have to use remote, otherwise you'll have to code it yourself in ruby to </span>
<span class="c1"># dynamically changing the system proxy preferences</span>
<span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:remote</span><span class="p">,</span> <span class="ss">:url</span> <span class="o">=&gt;</span> <span class="s2">"http://localhost:4444/wd/hub"</span><span class="p">,</span> <span class="ss">:desired_capabilities</span> <span class="o">=&gt;</span> <span class="n">caps</span>
</pre></div>
</div>
</div>
<div class="section" id="chrome">
<h4>Chrome<a class="headerlink" href="#chrome" title="Permalink to this headline">¶</a></h4>
<p>基本上与IE相同。在Windows上，它与IE使用同样的配置。在Mac上，使用System Preference->Network settings。在Linux（Ubuntu）上则使用System>Preferences>Network Proxy Preferences（或者在“/tec/environment”设置http_proxy）。在撰写本文时未知如何以编程方式设置代理。</p>
</div>
<div class="section" id="firefox">
<h4>Firefox<a class="headerlink" href="#firefox" title="Permalink to this headline">¶</a></h4>
<p>Firefox在一个profile中维护着一个proxy配置。你可以在一个profile中预先设置一个proxy，然后使用这个profile。或者你也在动态创建的profile里设置代理，例如：</p>
<div class="highlight-java"><div class="highlight"><pre><span class="n">String</span> <span class="n">PROXY</span> <span class="o">=</span> <span class="s">"localhost:8080"</span><span class="o">;</span>

<span class="n">org</span><span class="o">.</span><span class="na">openqa</span><span class="o">.</span><span class="na">selenium</span><span class="o">.</span><span class="na">Proxy</span> <span class="n">proxy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">org</span><span class="o">.</span><span class="na">openqa</span><span class="o">.</span><span class="na">selenium</span><span class="o">.</span><span class="na">Proxy</span><span class="o">();</span>
<span class="n">proxy</span><span class="o">.</span><span class="na">setHttpProxy</span><span class="o">(</span><span class="n">PROXY</span><span class="o">)</span>
     <span class="o">.</span><span class="na">setFtpProxy</span><span class="o">(</span><span class="n">PROXY</span><span class="o">)</span>
     <span class="o">.</span><span class="na">setSslProxy</span><span class="o">(</span><span class="n">PROXY</span><span class="o">);</span>
<span class="n">DesiredCapabilities</span> <span class="n">cap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DesiredCapabailities</span><span class="o">();</span>
<span class="n">cap</span><span class="o">.</span><span class="na">setCapability</span><span class="o">(</span><span class="n">CapabilityType</span><span class="o">.</span><span class="na">PROXY</span><span class="o">,</span> <span class="n">proxy</span><span class="o">);</span>
<span class="n">WebDriver</span> <span class="n">driver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FirefoxDriver</span><span class="o">(</span><span class="n">cap</span><span class="o">);</span>
</pre></div>
</div>
<div class="highlight-python" style="display: none;"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">from</span> <span class="nn">selenium.webdriver.common.proxy</span> <span class="kn">import</span> <span class="o">*</span>

<span class="n">myProxy</span> <span class="o">=</span> <span class="s">"host:8080"</span>

<span class="n">proxy</span> <span class="o">=</span> <span class="n">Proxy</span><span class="p">({</span>
    <span class="s">'proxyType'</span><span class="p">:</span> <span class="n">ProxyType</span><span class="o">.</span><span class="n">MANUAL</span><span class="p">,</span>
    <span class="s">'httpProxy'</span><span class="p">:</span> <span class="n">myProxy</span><span class="p">,</span>
    <span class="s">'ftpProxy'</span><span class="p">:</span> <span class="n">myProxy</span><span class="p">,</span>
    <span class="s">'sslProxy'</span><span class="p">:</span> <span class="n">myProxy</span><span class="p">,</span>
    <span class="s">'noProxy'</span><span class="p">:</span> <span class="s">''</span> <span class="c"># set this value as desired</span>
    <span class="p">})</span>

<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Firefox</span><span class="p">(</span><span class="n">proxy</span><span class="o">=</span><span class="n">proxy</span><span class="p">)</span>

<span class="c"># for remote</span>
<span class="n">caps</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">DesiredCapabilities</span><span class="o">.</span><span class="n">FIREFOX</span>
<span class="n">proxy</span><span class="o">.</span><span class="n">add_to_capabilities</span><span class="p">(</span><span class="n">caps</span><span class="p">)</span>

<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="o">.</span><span class="n">Remote</span><span class="p">(</span><span class="n">desired_capabilities</span><span class="o">=</span><span class="n">caps</span><span class="p">)</span>
</pre></div>
</div>
<div class="highlight-ruby" style="display: none;"><div class="highlight"><pre><span class="nb">require</span> <span class="s1">'rubygems'</span>
<span class="nb">require</span> <span class="s1">'selenium-webdriver'</span>

<span class="no">PROXY</span> <span class="o">=</span> <span class="s1">'localhost:8087'</span>

<span class="n">profile</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="ss">Firefox</span><span class="p">:</span><span class="ss">:Profile</span><span class="o">.</span><span class="n">new</span>
<span class="n">profile</span><span class="o">.</span><span class="n">proxy</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">::</span><span class="no">Proxy</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
  <span class="ss">:http</span>     <span class="o">=&gt;</span> <span class="no">PROXY</span><span class="p">,</span>
  <span class="ss">:ftp</span>      <span class="o">=&gt;</span> <span class="no">PROXY</span><span class="p">,</span>
  <span class="ss">:ssl</span>      <span class="o">=&gt;</span> <span class="no">PROXY</span>
<span class="p">)</span>

<span class="n">driver</span> <span class="o">=</span> <span class="ss">Selenium</span><span class="p">:</span><span class="ss">:WebDriver</span><span class="o">.</span><span class="n">for</span> <span class="ss">:firefox</span><span class="p">,</span> <span class="ss">:profile</span> <span class="o">=&gt;</span> <span class="n">profile</span>
</pre></div>
</div>
</div>
<div class="section" id="opera">
<h4>Opera<a class="headerlink" href="#opera" title="Permalink to this headline">¶</a></h4>
<p>Todo</p>
</div>
</div>
</div>
<div class="section" id="html5">
<h2>HTML5<a class="headerlink" href="#html5" title="Permalink to this headline">¶</a></h2>
<p>Todo</p>
</div>
<div class="section" id="parallelizing-your-test-runs">
<h2>并行化执行测试<a class="headerlink" href="#parallelizing-your-test-runs" title="Permalink to this headline">¶</a></h2>
<p>Todo</p>
